name: Build

on:
  push:
    branches:
      - master

jobs:
  test:
    runs-on: ubuntu-16.04

    steps:
      - name: 'Checking out from GitHub'
        uses: 'actions/checkout@v2'

      - name: Restore node_modules
        id: cache-node-modules
        uses: actions/cache@master
        with:
          path: node_modules
          key: v1-${{ runner.os }}-${{ hashFiles('yarn.lock') }}

      - name: Yarn install
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: yarn

      - name: Prettier
        run: yarn format

      - name: Lint
        run: yarn lint

      - name: Type check
        run: yarn tsc:repo

      - name: Unit tests
        run: yarn test

  build:
    runs-on: ubuntu-16.04

    steps:
      - name: 'Checking out from GitHub'
        uses: 'actions/checkout@v2'

      - name: Restore node_modules
        id: cache-node-modules
        uses: actions/cache@master
        with:
          path: node_modules
          key: v1-${{ runner.os }}-${{ hashFiles('yarn.lock') }}

      - name: Yarn install
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: yarn

      - name: Yeah
        run: |
          echo CONTENTFUL_SPACE_ID=${{secrets.CONTENTFUL_SPACE_ID}} > ./.env.production
          echo CONTENTFUL_ACCESS_TOKEN=${{secrets.CONTENTFUL_ACCESS_TOKEN}} >> ./.env.production
          cat ./.env.production

      - name: Gatsby build
        run: yarn build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v1
        with:
          name: public
          path: public

  deploy:
    runs-on: ubuntu-16.04
    needs:
      - build
      - test

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v1
        with:
          name: public

      - name: Publish
        uses: netlify/actions/cli@master
        with:
          args: deploy --dir=public
        env:
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}

  lighthouse-check:
    runs-on: ubuntu-16.04
    needs:
      - deploy

    steps:
      - name: Run Lighthouse
        uses: foo-software/lighthouse-check-action@master
        id: lighthouseCheck
        with:
          urls: 'https://bertie.dev'
      - name: Handle Lighthouse Check results
        uses: foo-software/lighthouse-check-status-action@master
        with:
          lighthouseCheckResults: ${{ steps.lighthouseCheck.outputs.lighthouseCheckResults }}
          minAccessibilityScore: '100'
          minBestPracticesScore: '100'
          minPerformanceScore: '90'
          minSeoScore: '100'
